{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin1\\\\Desktop\\\\3rd Project posts\\\\my-blogs\\\\src\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./CreatePost.css\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BAD_WORDS = [\"bugger\", \"shit\", \"bloody\", \"bollocks\", \"bullshit\", \"bastard\", \"pissed\", \"arse\", \"bitch\", \"cow\", \"crap\", \"cunt\", \"damn\", \"son of a bitch\", \"arsehole\", \"balls\", \"crappity\", \"fuck\", \"jesus christ\", \"motherfucker\"];\nexport default function CreatePost() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    title: \"\",\n    content: \"\",\n    date: \"\",\n    author: \"\",\n    category: \"\"\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const containsBadWords = text => {\n    const lowerText = text.toLowerCase();\n    return BAD_WORDS.some(word => {\n      const regex = new RegExp(`\\\\b${word}\\\\b`, \"i\");\n      return regex.test(lowerText);\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      title,\n      content,\n      author\n    } = formData;\n    if (containsBadWords(title) || containsBadWords(content) || containsBadWords(author)) {\n      alert(\"Bad words are not allowed in the blog post.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/posts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      alert(data.message || \"Post submitted successfully.\");\n      setFormData({\n        title: \"\",\n        content: \"\",\n        date: \"\",\n        author: \"\",\n        category: \"\"\n      });\n      navigate(\"/bloglist\");\n    } catch (error) {\n      alert(\"Failed to submit post. Please try again later.\");\n      console.error(\"Error submitting post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Blog Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        required: true,\n        value: formData.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"content\",\n        placeholder: \"Content\",\n        required: true,\n        value: formData.content,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        required: true,\n        value: formData.date,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        placeholder: \"Author\",\n        required: true,\n        value: formData.author,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"category\",\n        required: true,\n        value: formData.category,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"travel\",\n          children: \"Travel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cooking\",\n          children: \"Cooking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sports\",\n          children: \"Sports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"esports\",\n          children: \"Esports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/bloglist\",\n      className: \"back-link\",\n      children: \"Back to Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"6IcK6VEpbvb4qzeW/aE3s6UrajE=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useNavigate","Link","jsxDEV","_jsxDEV","BAD_WORDS","CreatePost","_s","navigate","formData","setFormData","title","content","date","author","category","handleChange","e","target","name","value","containsBadWords","text","lowerText","toLowerCase","some","word","regex","RegExp","test","handleSubmit","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","data","json","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","onChange","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/Admin1/Desktop/3rd Project posts/my-blogs/src/CreatePost.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./CreatePost.css\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nconst BAD_WORDS = [\r\n  \"bugger\", \"shit\", \"bloody\", \"bollocks\", \"bullshit\", \"bastard\", \"pissed\",\r\n  \"arse\", \"bitch\", \"cow\", \"crap\", \"cunt\", \"damn\", \"son of a bitch\", \"arsehole\",\r\n  \"balls\", \"crappity\", \"fuck\", \"jesus christ\", \"motherfucker\"\r\n];\r\n\r\nexport default function CreatePost() {\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n    date: \"\",\r\n    author: \"\",\r\n    category: \"\"\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const containsBadWords = (text) => {\r\n    const lowerText = text.toLowerCase();\r\n    return BAD_WORDS.some(word => {\r\n      const regex = new RegExp(`\\\\b${word}\\\\b`, \"i\");\r\n      return regex.test(lowerText);\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { title, content, author } = formData;\r\n\r\n    if (\r\n      containsBadWords(title) ||\r\n      containsBadWords(content) ||\r\n      containsBadWords(author)\r\n    ) {\r\n      alert(\"Bad words are not allowed in the blog post.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/posts\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      const data = await response.json();\r\n      alert(data.message || \"Post submitted successfully.\");\r\n\r\n      setFormData({\r\n        title: \"\",\r\n        content: \"\",\r\n        date: \"\",\r\n        author: \"\",\r\n        category: \"\"\r\n      });\r\n\r\n      navigate(\"/bloglist\");\r\n    } catch (error) {\r\n      alert(\"Failed to submit post. Please try again later.\");\r\n      console.error(\"Error submitting post:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-post-container\">\r\n      <h2>Create New Blog Post</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          required\r\n          value={formData.title}\r\n          onChange={handleChange}\r\n        />\r\n        <textarea\r\n          name=\"content\"\r\n          placeholder=\"Content\"\r\n          required\r\n          value={formData.content}\r\n          onChange={handleChange}\r\n        ></textarea>\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          required\r\n          value={formData.date}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"author\"\r\n          placeholder=\"Author\"\r\n          required\r\n          value={formData.author}\r\n          onChange={handleChange}\r\n        />\r\n        <select\r\n          name=\"category\"\r\n          required\r\n          value={formData.category}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"\" disabled>Select Category</option>\r\n          <option value=\"travel\">Travel</option>\r\n          <option value=\"cooking\">Cooking</option>\r\n          <option value=\"sports\">Sports</option>\r\n          <option value=\"esports\">Esports</option>\r\n        </select>\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n      <Link to=\"/bloglist\" className=\"back-link\">Back to Blog</Link>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}